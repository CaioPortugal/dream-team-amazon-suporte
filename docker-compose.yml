version: "3.1"
networks:
  support:
      driver: bridge
services:
    app:
      user: root
      container_name: app
      env_file: .env
      build: 
        context: .
        dockerfile: dotnet.dockerfile
      ports: 
        - ${APP_PORT}:80
      depends_on:
        - database
      networks:
        - support
    database:
      container_name: database
      image: mysql:8.0
      ports:
        - ${DATABASE_PORT}:3306
      env_file: .env
      restart: always
      volumes:
        - volume-data:/var/lib/mysql
      environment:
        MYSQL_ROOT_PASSWORD: ${DBPassword}
        MYSQL_DATABASE: ${DBName}
      networks:
        - support
    zookeeper:
      image: confluentinc/cp-zookeeper:latest
      networks: 
        - support
      ports:
        - 2181:2181
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000  
    kafka:
      image: confluentinc/cp-kafka:latest
      networks: 
        - support
      depends_on:
        - zookeeper
      ports:
        - 9092:9092
        - 29092:29092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_BOOTSTRAP_SERVER: kafka:9092
volumes:
   volume-data:
   volume-queue: